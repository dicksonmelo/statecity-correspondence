        () Criar um arquivo JSON para cada estado e escrever dentro dele um array das suas cidades. O nome do arquivo deve ser o UF do estado.
        () Criar uma função que **leia** através do parâmetro a UF de um estado e retorne a quantidade de cidades daquele estado.
        () Criar um método que imprima no console através da UF os 5 estados que possuem mais cidades. Seguidos da quantidade. Ex.: "UF - 82".
        () Criar um método que imprima no console a UF dos 5 estados que possuem menos cidade, em ordem descrescente. Ou seja, "UF - 90", "UF - 84", "UF - 61"
        () Criar um método que imprima no console um array com a cidade de MAIOR nome de cada estado. Ex.: "Nome da Cidade, UF".
        () Criar um método que imprima no console um array com a cidade de MENOR nome de cada estado. Ex.: "Nome da Cidade, UF".
        () Criar um método que imprima no console a cidade com MAIOR nome entre todos os estados.
        () Criar um método que imprima no console a cidade com MENOR nome entre todos os estados.

    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-
    
        Observações:
        - Nos itens que tratam a respeito do tamanho do nome da cidade, em caso de
        empate no tamanho entre várias cidades, você deve considerar a ordem alfabética para
        ordenar as cidades pelo seu nome, e então retornar a primeira cidade.
        - Você deve considerar os nomes das cidades da forma que estão no arquivo,
        mesmo que tenha observações no nome entre parênteses. Exemplo: Cidade X (antiga
        Cidade Y).
        - Ao rodar o projeto, ele deve executar os métodos em sequência e depois finalizar
        a execução.